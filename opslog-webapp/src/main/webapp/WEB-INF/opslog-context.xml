<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
               
  <!-- Persistence -->
  <bean id="dataSource" class="org.h2.jdbcx.JdbcConnectionPool" destroy-method="dispose">
      <constructor-arg>
          <bean class="org.h2.jdbcx.JdbcDataSource">
              <property name="URL" value="jdbc:h2:dbname"/>
              <property name="user" value="user"/>
              <property name="password" value="password"/>
           </bean>
      </constructor-arg>
  </bean> 

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
      <property name="dataSource" ref="dataSource"/>
      <property name="useTransactionAwareDataSource" value="true"/>
      <property name="packagesToScan">
          <list>
              <value>org.opslog.model</value>
          </list>
      </property>
      <property name="hibernateProperties">
          <props>
              <prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
              <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
              <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
              <prop key="hibernate.dialect">${hibernate.dialect}</prop>
              <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
          </props>
      </property>
  </bean>

  <bean id="userDao" class="org.opslog.dao.mongo.UserMongoDAO">
      <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
  <bean id="projectDao" class="org.opslog.dao.mongo.ProjectMongoDAO">
      <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
  <bean id="commentDao" class="org.opslog.dao.mongo.CommentMongoDAO">
      <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
  <bean id="fileRefDao" class="org.opslog.dao.mongo.FileRefMongoDAO">
      <property name="sessionFactory" ref="sessionFactory"/>
  </bean>
  
  <!-- backend services -->
  
  <bean id="opsLogService" class="org.opslog.services.impl.OpsLogServiceImpl">
      <property name="pageSize" value="20"/>
      <property name="userDao" ref="userDao"/>
      <property name="projectDao" ref="projectDao"/>
      <property name="commentDao" ref="commentDao"/>
      <property name="fileRefDao" ref="fileRefDao"/>
  </bean>
</beans>
